{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nlet AppComponent = class AppComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.searchTermSubject = new BehaviorSubject('');\n    this.errorMessage = null; // Error message for failed delete\n    // Fetch todos from the backend when the component is initialized\n\n    this.todos$ = this.todoService.getAll().pipe(map(todos => {\n      console.log('Todos in AppComponent:', todos); // Log the data received\n\n      this.errorMessage = null; // Clear errors when data is successfully fetched\n\n      return todos;\n    })); // Combine todos and search term for filtering\n\n    this.filteredTodos$ = combineLatest([this.todoService.todos$, this.searchTermSubject]).pipe(map(([todos, searchTerm]) => todos.filter(todo => todo.task.toLowerCase().includes(searchTerm.toLowerCase()))));\n  }\n\n  onSearch(searchTerm) {\n    this.searchTermSubject.next(searchTerm); // Update the search term\n  }\n\n  deleteTodo(id) {\n    this.todoService.remove(id).subscribe({\n      next: () => {\n        this.errorMessage = null; // Clear error message on successful delete\n      },\n      error: () => {\n        this.errorMessage = `Failed to delete TODO with id ${id}. Please try again.`;\n      }\n    });\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"title\">\n      <h1>A list of TODOs</h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input id=\"search\" type=\"text\" (input)=\"onSearch($any($event.target).value)\">\n      \n      <app-progress-bar *ngIf=\"(todoService.loading$ | async)\"></app-progress-bar>\n      \n      <app-todo-item\n<app-todo-item\n  *ngFor=\"let todo of todos$ | async\"\n  [item]=\"todo\"\n  (delete)=\"deleteTodo($event)\"\n></app-todo-item>\n\n      ></app-todo-item>\n      \n      <div *ngIf=\"errorMessage\" class=\"error\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  `,\n  styleUrls: ['app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["/Users/alina/__all_data/CERN/todo-list/todo-list-frontend/src/app/app.component.ts"],"names":["__decorate","Component","BehaviorSubject","combineLatest","map","AppComponent","constructor","todoService","searchTermSubject","errorMessage","todos$","getAll","pipe","todos","console","log","filteredTodos$","searchTerm","filter","todo","task","toLowerCase","includes","onSearch","next","deleteTodo","id","remove","subscribe","error","selector","template","styleUrls"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,MAA/C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,IAAIC,YAAY,GAAG,MAAMA,YAAN,CAAmB;AAClCC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,iBAAL,GAAyB,IAAIN,eAAJ,CAAoB,EAApB,CAAzB;AACA,SAAKO,YAAL,GAAoB,IAApB,CAHqB,CAGK;AAC1B;;AACA,SAAKC,MAAL,GAAc,KAAKH,WAAL,CAAiBI,MAAjB,GAA0BC,IAA1B,CAA+BR,GAAG,CAAES,KAAD,IAAW;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC,EADwD,CACV;;AAC9C,WAAKJ,YAAL,GAAoB,IAApB,CAFwD,CAE9B;;AAC1B,aAAOI,KAAP;AACH,KAJ+C,CAAlC,CAAd,CALqB,CAUrB;;AACA,SAAKG,cAAL,GAAsBb,aAAa,CAAC,CAAC,KAAKI,WAAL,CAAiBG,MAAlB,EAA0B,KAAKF,iBAA/B,CAAD,CAAb,CAAiEI,IAAjE,CAAsER,GAAG,CAAC,CAAC,CAACS,KAAD,EAAQI,UAAR,CAAD,KAAyBJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCL,UAAU,CAACI,WAAX,EAAjC,CAAvB,CAA1B,CAAzE,CAAtB;AACH;;AACDE,EAAAA,QAAQ,CAACN,UAAD,EAAa;AACjB,SAAKT,iBAAL,CAAuBgB,IAAvB,CAA4BP,UAA5B,EADiB,CACwB;AAC5C;;AACDQ,EAAAA,UAAU,CAACC,EAAD,EAAK;AACX,SAAKnB,WAAL,CAAiBoB,MAAjB,CAAwBD,EAAxB,EAA4BE,SAA5B,CAAsC;AAClCJ,MAAAA,IAAI,EAAE,MAAM;AACR,aAAKf,YAAL,GAAoB,IAApB,CADQ,CACkB;AAC7B,OAHiC;AAIlCoB,MAAAA,KAAK,EAAE,MAAM;AACT,aAAKpB,YAAL,GAAqB,iCAAgCiB,EAAG,qBAAxD;AACH;AANiC,KAAtC;AAQH;;AA1BiC,CAAtC;AA4BArB,YAAY,GAAGL,UAAU,CAAC,CACtBC,SAAS,CAAC;AACN6B,EAAAA,QAAQ,EAAE,UADJ;AAENC,EAAAA,QAAQ,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAzBc;AA0BNC,EAAAA,SAAS,EAAE,CAAC,oBAAD;AA1BL,CAAD,CADa,CAAD,EA6BtB3B,YA7BsB,CAAzB;AA8BA,SAASA,YAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nlet AppComponent = class AppComponent {\n    constructor(todoService) {\n        this.todoService = todoService;\n        this.searchTermSubject = new BehaviorSubject('');\n        this.errorMessage = null; // Error message for failed delete\n        // Fetch todos from the backend when the component is initialized\n        this.todos$ = this.todoService.getAll().pipe(map((todos) => {\n            console.log('Todos in AppComponent:', todos); // Log the data received\n            this.errorMessage = null; // Clear errors when data is successfully fetched\n            return todos;\n        }));\n        // Combine todos and search term for filtering\n        this.filteredTodos$ = combineLatest([this.todoService.todos$, this.searchTermSubject]).pipe(map(([todos, searchTerm]) => todos.filter((todo) => todo.task.toLowerCase().includes(searchTerm.toLowerCase()))));\n    }\n    onSearch(searchTerm) {\n        this.searchTermSubject.next(searchTerm); // Update the search term\n    }\n    deleteTodo(id) {\n        this.todoService.remove(id).subscribe({\n            next: () => {\n                this.errorMessage = null; // Clear error message on successful delete\n            },\n            error: () => {\n                this.errorMessage = `Failed to delete TODO with id ${id}. Please try again.`;\n            },\n        });\n    }\n};\nAppComponent = __decorate([\n    Component({\n        selector: 'app-root',\n        template: `\n    <div class=\"title\">\n      <h1>A list of TODOs</h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input id=\"search\" type=\"text\" (input)=\"onSearch($any($event.target).value)\">\n      \n      <app-progress-bar *ngIf=\"(todoService.loading$ | async)\"></app-progress-bar>\n      \n      <app-todo-item\n<app-todo-item\n  *ngFor=\"let todo of todos$ | async\"\n  [item]=\"todo\"\n  (delete)=\"deleteTodo($event)\"\n></app-todo-item>\n\n      ></app-todo-item>\n      \n      <div *ngIf=\"errorMessage\" class=\"error\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  `,\n        styleUrls: ['app.component.scss'],\n    })\n], AppComponent);\nexport { AppComponent };\n"]},"metadata":{},"sourceType":"module"}